{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js","components/layout/MainNavigation.module.css"],"names":["LoadingSpinner","className","classes","spinner","module","exports","MainNavigation","header","logo","nav","to","activeClassName","active","Layout","props","main","children","NewQuote","React","lazy","QuoteDetail","NotFound","AllQuotes","App","fallback","exact","path","ReactDOM","render","document","getElementById"],"mappings":"mIAAA,4BAMeA,IAJQ,WACrB,OAAO,qBAAKC,UAAWC,IAAQC,Y,mBCFjCC,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,QAAU,kC,+JCwBbC,EAtBQ,WACrB,OACE,yBAAQL,UAAWC,IAAQK,OAA3B,UACE,qBAAKN,UAAWC,IAAQM,KAAxB,0BACA,qBAAKP,UAAWC,IAAQO,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CAASC,GAAG,UAAUC,gBAAiBT,IAAQU,OAA/C,0BAIF,6BACE,cAAC,IAAD,CAASF,GAAG,aAAaC,gBAAiBT,IAAQU,OAAlD,oCCHGC,EATA,SAACC,GACd,OACE,qCACE,cAAC,EAAD,IACA,sBAAMb,UAAWC,IAAQa,KAAzB,SAAgCD,EAAME,e,QCGtCC,EAAWC,IAAMC,MAAK,kBAAM,sDAI5BC,EAAcF,IAAMC,MAAK,kBAAM,sDAC/BE,EAAWH,IAAMC,MAAK,kBAAM,gCAC5BG,EAAYJ,IAAMC,MAAK,kBAAM,sDAqCpBI,MAnCf,WACE,OACE,8BACE,cAAC,EAAD,UAEE,cAAC,WAAD,CACEC,SACE,qBAAKvB,UAAU,WAAf,SACE,cAACD,EAAA,EAAD,MAHN,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUhB,GAAG,cAEf,cAAC,IAAD,CAAOgB,KAAK,aAAZ,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,UAAlB,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,mBAAZ,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,IAAZ,SACE,cAACL,EAAD,gBCtCdM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B1B,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,kC","file":"static/js/main.cec9c159.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2VYkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__fHn-U\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// Import React and Suspense for code splitting\nimport React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\n\n// When importing normal components, they are loaded in advance\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n// instead we can implement lazy loading\n// this only loads the import when its needed/accessed\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\n// React.lazy expects a function.\n// we call import as a function and pass it the path.\n\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        {/* It takes time to download resources so React expects a fallback UI content to display whilst it downloads and displays the component we set to lazy load. For this we wrap Suspense around the code we use React.lazy and pass it a fallback JSX element/s. */}\n        <Suspense\n          fallback={\n            <div className=\"centered\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/quotes\" />\n            </Route>\n            <Route path=\"/new-quote\">\n              <NewQuote />\n            </Route>\n            <Route exact path=\"/quotes\">\n              <AllQuotes />\n            </Route>\n            <Route path=\"/quotes/:quoteId\">\n              <QuoteDetail />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3BhAK\",\"logo\":\"MainNavigation_logo__YFkQu\",\"nav\":\"MainNavigation_nav__1fxdN\",\"active\":\"MainNavigation_active__2CZzL\"};"],"sourceRoot":""}